{"version":3,"sources":["app.js","app.html","environment.js","main.js","models/person.js","models/validation-result.js","resources/index.js","vinput.js","vinput.html","vselect.js","vselect.html"],"names":["App","StandardValidator","validator","onChange","obj","propertyName","person","validate","rules","then","newResults","delta","mergeValidationResults","validationResultArray","validationResultObj","array","handleSubmit","_validator","validateObject","validateProperty","oldResults","results","slice","forEach","newResult","newResultIndex","findIndex","x","rule","object","splice","push","_","groupBy","Person","genders","value","label","handleBlur","handleChange","debug","testing","configure","aurelia","use","standardConfiguration","plugin","feature","PLATFORM","moduleName","developmentLogging","environment","start","setRoot","firstName","genderId","personRules","ValidationRules","ensure","required","ValidationResultHandler","validationResult","fromObject","source","Object","assign","config","VinputCustomElement","defaultBindingMode","bindingMode","twoWay","onBlur","onKeyUp","length","isValid","wasValidated","find","valid","undefined","className","class","isValidFeedback","isInValidFeedback","join","bindable","VselectCustomElement"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Person, personRules } from \"./models/person\";\nimport { inject } from 'aurelia-dependency-injection';\nimport { StandardValidator } from 'aurelia-validation';\nimport _ from \"lodash\";\n\n@inject(StandardValidator)\nexport class App {\n  constructor(validator) {\n    this.person = new Person('bkr',2);\n    this.genders = [{ value: null, label: 'Choisir ...' }, { value: 1, label: 'Male' }, { value: 2, label: 'Female' }]\n    this._validator = validator;\n    this.rules = personRules();\n    this.handleBlur = () => this.onChange();\n    this.handleChange = () => this.onChange();\n\n    this.validationResultObj = {};\n    this.validationResultArray = [];\n  }\n\n\n  onChange = (obj, propertyName) => {\n    obj = this.person;\n    this.validate(obj, propertyName, this.rules).then(newResults => {\n      let delta = this.mergeValidationResults(\n        this.validationResultArray,\n        newResults\n      );\n      this.validationResultObj = delta.obj;\n      this.validationResultArray = delta.array;\n    });\n  };\n\n  handleSubmit = () => {\n    this.validate(this.person).then(newResults => {\n      let delta = this.mergeValidationResults(\n        this.validationResultArray,\n        newResults\n      );\n      this.validationResultObj = delta.obj;\n      this.validationResultArray = delta.array;\n\n    });\n  };\n\n  validate = (obj, propertyName, rules) => {\n    let validate = () => this._validator.validateObject(obj, rules);\n    if (propertyName) {\n      validate = () => this._validator.validateProperty(obj, propertyName, rules);\n    }\n    return validate();\n  };\n\n  mergeValidationResults = (oldResults, newResults) => {\n    let results = oldResults.slice(0);\n    newResults.forEach(newResult => {\n      const newResultIndex = results.findIndex(\n        x =>\n          x.rule === newResult.rule &&\n          x.object === newResult.object &&\n          x.propertyName === newResult.propertyName\n      );\n      if (newResultIndex !== -1) {\n        results.splice(newResultIndex, 1);\n      }\n      results.push(newResult);\n    });\n    return {\n      array: results,\n      obj: _.groupBy(results, x => x.propertyName)\n    };\n  };\n}\n","<template>\n    <require from=\"./vinput\"></require>\n    <require from=\"./vselect\"></require>\n\n  <div class=\"form-row\">\n    <div class=\"col-md-6 mb-3\">\n      <label for=\"validationServer03\">First Name</label>\n      <vinput\n        type=\"text\"\n        class=\"form-control\"      \n        placeholder=\"Name\"   \n        property-name=\"firstName\" \n        value.bind=\"person.firstName\"   \n        validation-result.bind=\"validationResultObj\" \n        handle-blur.bind=\"handleBlur\" \n        handle-change.bind=\"handleChange\"  \n        containerless        \n      />\n    </div>\n    <div class=\"col-md-6 mb-3\">\n      <div class=\"form-group\">\n        <label  >Example select</label>\n        <vselect     \n            property-name=\"genderId\" \n        value.bind=\"person.genderId\"   \n         source.bind=\"genders\"  \n         handle-change.bind=\"handleChange\"  \n         validation-result.bind=\"validationResultObj\" \n          containerless        \n        />\n\n      </div>\n    </div>\n\n  </div>\n\n  <button click.delegate=\"handleSubmit()\">Validate</button>\n</template>\n","export default {\n  debug: true,\n  testing: true\n};\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport environment from './environment';\nimport { PLATFORM } from 'aurelia-pal';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-validation')\n    .feature(PLATFORM.moduleName('resources/index'));\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin(PLATFORM.moduleName('aurelia-testing'));\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName('app')));\n}\n","import { ValidationRules } from 'aurelia-validation';\r\nexport class Person {\r\n    constructor(firstName, genderId) {\r\n        this.firstName = firstName;\r\n        this.genderId = genderId;\r\n    }\r\n}\r\n\r\n\r\nexport const personRules = () => ValidationRules\r\n    .ensure('firstName').required()\r\n    .ensure('genderId').required()\r\n    .rules;\r\n\r\n","export class ValidationResultHandler {\r\n\r\n    validationResult = [];\r\n    constructor() {\r\n    }\r\n\r\n    static fromObject(...source) {\r\n        return Object.assign(new ValidationResultHandler(), source);\r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","import { bindable, bindingMode } from 'aurelia-framework';\r\n\r\nexport class VinputCustomElement {\r\n    @bindable type = \"text\";\r\n    @bindable class = \"form-control\";\r\n    @bindable placeholder = \"\";\r\n    @bindable propertyName;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n    @bindable handleChange;\r\n    @bindable handleBlur;\r\n    @bindable validationResult;\r\n\r\n    onChange() {\r\n        this.handleChange(null, this.propertyName);\r\n    }\r\n\r\n    onBlur() {\r\n        this.handleChange(null, this.propertyName);\r\n    }\r\n\r\n    onKeyUp(value) {\r\n        this.handleChange(value);\r\n    }\r\n\r\n    get wasValidated() {\r\n        return this.validationResult && this.validationResult[this.propertyName] && this.validationResult[this.propertyName].length > 0;\r\n    }\r\n\r\n    get isValid() {\r\n        let isValid = false;\r\n        if (this.wasValidated) {\r\n            isValid = this.validationResult[this.propertyName].find(x => !x.valid) === undefined;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    get isValidFeedback() {\r\n        return this.wasValidated && this.isValid;\r\n    }\r\n\r\n    get isInValidFeedback() {\r\n        return this.wasValidated && !this.isValid\r\n    }\r\n\r\n    get className() {\r\n        let className = [this.class];\r\n        if (this.isValidFeedback) {\r\n            className.push('is-valid');\r\n        }\r\n        else if (this.isInValidFeedback) {\r\n            className.push('is-invalid');\r\n        }\r\n        return className.join(' ')\r\n    }\r\n\r\n    get errors() {\r\n        return this.validationResult[this.propertyName];\r\n    }\r\n\r\n\r\n\r\n}","<template>\r\n  <input\r\n    type.bind=\"type\"\r\n    class.bind=\"className\"\r\n    placeholder.bind=\"placeholder\"\r\n    value.bind=\"value\"\r\n    name.bind=\"propertyName\"\r\n    blur.trigger=\"onBlur()\"\r\n    keyup.trigger=\"onKeyUp()\"\r\n  />\r\n\r\n  <div if.bind=\"isValidFeedback\" class=\"valid-feedback\">\r\n    Looks good!\r\n  </div>\r\n\r\n  <div\r\n    if.bind=\"isInValidFeedback\"\r\n    class=\"invalid-feedback\"\r\n    repeat.for=\"error of errors\"\r\n  >\r\n    ${error.message}\r\n  </div>\r\n</template>\r\n","import { bindable, bindingMode } from 'aurelia-framework';\r\n\r\nexport class VselectCustomElement {\r\n    @bindable class = \"form-control\";\r\n    @bindable propertyName;\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n    @bindable handleChange;\r\n    @bindable source = [];\r\n    @bindable validationResult;\r\n\r\n    onChange() {\r\n        this.handleChange(null, this.propertyName);\r\n    }\r\n\r\n    get wasValidated() {\r\n        return this.validationResult && this.validationResult[this.propertyName] && this.validationResult[this.propertyName].length > 0;\r\n    }\r\n\r\n    get isValid() {\r\n        let isValid = false;\r\n        if (this.wasValidated) {\r\n            isValid = this.validationResult[this.propertyName].find(x => !x.valid) === undefined;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    get isValidFeedback() {\r\n        return this.wasValidated && this.isValid;\r\n    }\r\n\r\n    get isInValidFeedback() {\r\n        return this.wasValidated && !this.isValid\r\n    }\r\n\r\n    get className() {\r\n        let className = [this.class];\r\n        if (this.isValidFeedback) {\r\n            className.push('is-valid');\r\n        }\r\n        else if (this.isInValidFeedback) {\r\n            className.push('is-invalid');\r\n        }\r\n        return className.join(' ')\r\n    }\r\n\r\n    get errors() {\r\n        return this.validationResult[this.propertyName];\r\n    }\r\n\r\n\r\n\r\n}","<template>\r\n  <select class.bind=\"className\" value.bind=\"value\" change.trigger=\"onChange()\">\r\n    <option repeat.for=\"model of source\" model.bind=\"model.value\"\r\n      >${model.label}</option\r\n    >\r\n  </select>\r\n\r\n  <div if.bind=\"isValidFeedback\" class=\"valid-feedback\">\r\n    Looks good!\r\n  </div>\r\n\r\n  <div\r\n    if.bind=\"isInValidFeedback\"\r\n    class=\"invalid-feedback\"\r\n    repeat.for=\"error of errors\"\r\n  >\r\n    ${error.message}\r\n  </div>\r\n</template>\r\n"],"sourceRoot":".."}